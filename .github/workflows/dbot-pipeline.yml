
name: DBot Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-dbot-intent-service:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}/dbot-intent-service
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: dbot-intent-service
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test-dbot-intent-service:
    needs: build-dbot-intent-service
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/donaldm/mbot-neo-dbot/dbot-intent-service:main
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
      issues: read
      checks: write
      pull-requests: write
      packages: read
    steps:
      - name: Test with pytest
        run: |
          TEST_RESULT_FOLDER=${{ GITHUB_WORKSPACE }}/test-results
          mkdir -p $TEST_RESULT_FOLDER
          cd /dbot/intent_service
          pytest --junitxml=$TEST_RESULT_FOLDER/dbot_intent_service.xml
      - name: Install node
        run: |
          apk add --update nodejs npm
      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            test-results/*.xml
