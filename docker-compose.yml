version: '2'

networks:
  dbot_network:

services:
  redis:
      image: redis:alpine3.17
      networks:
        - dbot_network
      command: redis-server
      restart: always
      ports:
        - '6379:6379'
      expose:
        - '6379'
      volumes:
        - redis-data:/data
        - redis-conf:/usr/local/etc/redis/redis.conf

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - dbot_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '22181:2181'

  kafka:
    image: confluentinc/cp-kafka:latest
    entrypoint: sh -c 'sleep 30 && /etc/confluent/docker/run'
    networks:
      - dbot_network
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
    expose:
      - '29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - dbot_network
    depends_on:
      - kafka
      - zookeeper
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:9092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic status --replication-factor 1 --partitions 1 
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic utterances --replication-factor 1 --partitions 1 
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic intents --replication-factor 1 --partitions 1 
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic tts --replication-factor 1 --partitions 1 
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

  dbot-intent-service:
    image: dbot-intent-service:1.0
    networks:
      - dbot_network
    build: ./dbot-intent-service
    depends_on:
      - init-kafka
      - kafka
      - zookeeper
    environment:
      KAFKA_BOOTSTRAP_HOST: kafka
      KAFKA_BOOTSTRAP_PORT: 9092
      PYTHONUNBUFFERED: 1

  text-to-speech-service:
    image: text-to-speech-service:1.0
    networks:
      - dbot_network
    build: ./text-to-speech-service
    depends_on:
      - init-kafka
      - kafka
      - zookeeper
    volumes:
      - "/etc/alsa:/etc/alsa"
      - "/usr/share/alsa:/usr/share/alsa"
      - "~/.config/pulse:/.config/pulse"
      - "/mnt/wslg/PulseServer:/mnt/wslg/PulseServer"
    environment:
      KAFKA_BOOTSTRAP_HOST: kafka
      KAFKA_BOOTSTRAP_PORT: 9092
      PYTHONUNBUFFERED: 1
      PULSE_SERVER: unix:/mnt/wslg/PulseServer
    group_add:
      - "29"

volumes:
  redis-data:
  redis-conf:
